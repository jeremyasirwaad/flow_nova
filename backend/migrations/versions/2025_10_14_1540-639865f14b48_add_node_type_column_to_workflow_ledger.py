"""add node_type column to workflow_ledger

Revision ID: 639865f14b48
Revises: 14b46a8e774b
Create Date: 2025-10-14 15:40:20.639081

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '639865f14b48'
down_revision: Union[str, None] = '14b46a8e774b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'workflow_edges', ['id'])

    # Add column as nullable first
    op.add_column('workflow_ledger', sa.Column('node_type', sa.String(), nullable=True))

    # Update existing rows with a default value 'unknown'
    op.execute("UPDATE workflow_ledger SET node_type = 'unknown' WHERE node_type IS NULL")

    # Now make the column not nullable
    op.alter_column('workflow_ledger', 'node_type', nullable=False)

    op.create_unique_constraint(None, 'workflow_ledger', ['id'])
    op.create_unique_constraint(None, 'workflow_nodes', ['id'])
    op.create_unique_constraint(None, 'workflow_runs', ['id'])
    op.create_unique_constraint(None, 'workflows', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'workflows', type_='unique')
    op.drop_constraint(None, 'workflow_runs', type_='unique')
    op.drop_constraint(None, 'workflow_nodes', type_='unique')
    op.drop_constraint(None, 'workflow_ledger', type_='unique')
    op.drop_column('workflow_ledger', 'node_type')
    op.drop_constraint(None, 'workflow_edges', type_='unique')
    # ### end Alembic commands ###
