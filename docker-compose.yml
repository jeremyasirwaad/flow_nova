version: "3.9"

name: flownova_stack

services:
  postgres:
    image: postgres:16-alpine
    container_name: flownova_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_SUPERUSER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_SUPERPASS}
      POSTGRES_DB: postgres
    volumes:
      - flownova_postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_SUPERUSER -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [app_network]

  redis:
    image: redis:7-alpine
    container_name: flownova_redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - flownova_redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [app_network]

  loki:
    image: grafana/loki:2.9.8
    container_name: flownova_loki
    command: ["-config.file=/etc/loki/config.yml"]
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro
      - flownova_loki_data:/loki
    ports:
      - "3100:3100"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3100/ready"]
      interval: 15s
      timeout: 5s
      retries: 10
    networks: [app_network]

  grafana:
    image: grafana/grafana:latest
    container_name: flownova_grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin_password}
    volumes:
      - flownova_grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      loki:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3000/api/health"]
      interval: 15s
      timeout: 5s
      retries: 10
    networks: [app_network]

  litellm:
    image: ghcr.io/berriai/litellm:main-stable
    container_name: flownova_litellm
    command: ["--config", "/app/config.yaml", "--port", "4000"]
    environment:
      LITELLM_MASTER_KEY: ${LITELLM_MASTER_KEY}
      LITELLM_SALT_KEY: ${LITELLM_SALT_KEY}
      STORE_MODEL_IN_DB: "True"
      DATABASE_URL: postgresql://litellm:${LITELLM_DB_PASSWORD}@postgres:5432/litellm_db
      UI_USERNAME: ${LITELLM_UI_USERNAME:-admin}
      UI_PASSWORD: ${LITELLM_UI_PASSWORD:-admin_password}
      SEPARATE_HEALTH_APP: "1"
      SEPARATE_HEALTH_PORT: "4001"
      LITELLM_REDIS_URL: ${LITELLM_REDIS_URL:-redis://redis:6379/0}
    volumes:
      - ./litellm/config.yaml:/app/config.yaml:ro
    expose:
      - "4000"
      - "4001"
    ports:
      - "4000:4000"
      - "4001:4001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:4001/health/readiness"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  flownova_postgres_data:
  flownova_redis_data:
  flownova_grafana_data:
  flownova_loki_data:
